plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.firebase.crashlytics'
}

android {
    compileSdk parent.compileSdkVersion

    defaultConfig {
        minSdkVersion parent.minSdkVersion
        targetSdkVersion parent.targetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "$composeCompilerVersion"
    }
    namespace 'exchange.dydx.trading.core'
}

dependencies {

    /* Module Dependencies */
    implementation project(':v4:common')
    implementation project(':v4:utilities')
    implementation project(':v4:platformUI')
    api project(':v4:integration:analytics')

    implementation project(':v4:integration:dydxStateManager')
    implementation project(':v4:utilities')
    implementation project(':v4:feature:onboarding')
    implementation project(':v4:feature:profile')
    implementation project(':v4:feature:portfolio')
    implementation project(':v4:feature:trade')
    implementation project(':v4:feature:market')
    implementation project(':v4:feature:newsalerts')
    implementation project(':v4:feature:workers')
    implementation project(':v4:feature:transfer')

    /* Local Dependencies */
    implementation "androidx.core:core:$androidKtxVersion"

    api "androidx.activity:activity:$activityComposeVersion"
    implementation "androidx.activity:activity-compose:$activityComposeVersion"

    // Add non-standard deps above. Deps added below this line may be periodically overwritten
    /* Standard Dependencies */

    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation project(':v4:feature:shared')

    kapt "com.google.dagger:hilt-compiler:$hiltVersion"
    kapt "com.google.dagger:dagger-compiler:$hiltVersion"

    // Hilt
    api "com.google.dagger:dagger:$hiltVersion"
    api "com.google.dagger:hilt-core:$hiltVersion"
    api "com.google.dagger:hilt-android:$hiltVersion"
    implementation "androidx.hilt:hilt-navigation-compose:$hiltAndroidXVersion"

    // Firebase
    implementation platform ("com.google.firebase:firebase-bom:$firebaseBomVersion")
    implementation 'com.google.firebase:firebase-analytics'
    implementation("com.google.firebase:firebase-crashlytics")

    // Amplitude
    implementation 'com.amplitude:analytics-android:1.13.0'

    // Compose
    api "androidx.compose.runtime:runtime:$composeVersion"

    api "androidx.compose.ui:ui:$composeVersion"
    implementation "androidx.compose.ui:ui-text:$composeVersion"
    implementation "androidx.compose.material:material:$composeVersion"

    // Navigation
    implementation "androidx.navigation:navigation-common:$navigationVersion"
    api "androidx.navigation:navigation-runtime:$navigationVersion"

    implementation "androidx.navigation:navigation-compose:$navigationVersion"

    //Lifecycle
    api "androidx.lifecycle:lifecycle-viewmodel:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-common:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$archLifecycleVersion"

    //Logging
    implementation "com.jakewharton.timber:timber:$timberVersion"

    // Compose Tooling
    implementation "androidx.compose.ui:ui-tooling-preview:$composeVersion"
    debugImplementation "androidx.compose.ui:ui-tooling:$composeVersion"
    debugRuntimeOnly "androidx.compose.ui:ui-test-manifest:$composeVersion"
    debugImplementation "androidx.customview:customview:$customviewVersion"
    debugImplementation "androidx.customview:customview-poolingcontainer:$customviewPoolingVersion"
    debugApi "androidx.compose.foundation:foundation-layout:$composeVersion"
    debugImplementation "androidx.compose.foundation:foundation:$composeVersion"
    debugImplementation "androidx.compose.ui:ui-graphics:$composeVersion"
    debugImplementation "androidx.compose.ui:ui-unit:$composeVersion"

    // Testing
    testImplementation "junit:junit:$junitVersion"
//    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$composeVersion"
    
    androidTestImplementation "com.kaspersky.android-components:kaspresso:$kaspressoVersion"
    // Jetpack Compose support
    androidTestImplementation "com.kaspersky.android-components:kaspresso-compose-support:$kaspressoVersion"
    // https://stackoverflow.com/questions/73348523/java-lang-nosuchmethoderror-no-static-method-for-jetpack-composable
    implementation "androidx.tracing:tracing:$androidXTracingVersion"

    implementation "dydxprotocol:cartera-android:$carteraVersion"

    implementation "androidx.biometric:biometric-ktx:$biometricVersion"
}
