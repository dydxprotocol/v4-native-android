plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

def apikeyPropertiesFile= rootProject.file("starkex.properties.local")
if (!apikeyPropertiesFile.exists()) {
    apikeyPropertiesFile = rootProject.file("starkex.properties")
}

def apikeyProperties = new Properties()
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))

android {
    compileSdk parent.compileSdkVersion

    defaultConfig {
        minSdkVersion parent.minSdkVersion
        targetSdkVersion parent.targetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        buildConfigField("String", "AES_DECRYPT_PW", apikeyProperties['AES_DECRYPT_PW'])
        buildConfigField("String", "AES_DECRYPT_SAMPLE", apikeyProperties['AES_DECRYPT_SAMPLE'])
        buildConfigField("String", "AES_DECRYPT_SAMPLE_CHAIN_ID_RAW", apikeyProperties['AES_DECRYPT_SAMPLE_CHAIN_ID_RAW'])
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        compose true
        buildConfig true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "$composeCompilerVersion"
    }
    namespace 'exchange.dydx.trading.integration.starkex'
}

dependencies {

    /* Module Dependencies */
    implementation project(':v4:common')
    api project(':v4:integration:javascript')

    /* Local Dependencies */

    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlinxSerializationVersion"
    api "org.jetbrains.kotlinx:kotlinx-serialization-core:$kotlinxSerializationVersion"


    // Add non-standard deps above. Deps added below this line may be periodically overwritten
    /* Standard Deps */

//    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"

    kapt "com.google.dagger:hilt-compiler:$hiltVersion"

    // Hilt
    api "com.google.dagger:dagger:$hiltVersion"
    implementation "com.google.dagger:hilt-core:$hiltVersion"
    api "com.google.dagger:hilt-android:$hiltVersion"
//    implementation "androidx.hilt:hilt-navigation-compose:$hiltAndroidXVersion"

    // Compose
    debugApi "androidx.compose.runtime:runtime:$composeVersion"
    releaseImplementation "androidx.compose.runtime:runtime:$composeVersion"

    //Logging
    implementation "com.jakewharton.timber:timber:$timberVersion"

    // Compose Tooling
    implementation "androidx.compose.ui:ui-tooling-preview:$composeVersion"
    debugImplementation "androidx.compose.ui:ui-tooling:$composeVersion"
    debugRuntimeOnly "androidx.compose.ui:ui-test-manifest:$composeVersion"
    debugImplementation "androidx.customview:customview:$customviewVersion"
    debugImplementation "androidx.customview:customview-poolingcontainer:$customviewPoolingVersion"

    // Testing
    testImplementation "junit:junit:$junitVersion"
// androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$composeVersion"

}
